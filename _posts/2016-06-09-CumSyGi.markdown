#1. 문제 상황 도출
    기존의 자동분사기는 일정 시간단위로 방향제를 분사하는 방식이다. 이 방식은 보통 1시간마다 뿌려지기 때문에 낭비가 심한데,
    특히 활동이 없는 밤의 경우엔 방향제의 낭비가 더욱 심하다. 따라서 스마트폰 어플리케이션을 통해 원격으로 자동분사기를
    조절하는 시스템의 개발이 요구되었으며 또한 기존 제품의 경우 남아있는 방향제의 양을 확인할 수 없는 점을 보완하여
    어플리케이션을 통해 확인할 수 있도록 개발할 예정이다.

#2. 요구사항을 만족하기 위한 핵심 아이디어 / 전체 시스템 구조

    ![img](/noname01.jpg)

#3. 동일한 문제 혹은 유사한 문제를 해결하고자 한 기존의 방법/제품/서비스/시스템 조사
    
기존의 고급형 자동 분사기 | 스마트 자동 분사기
---|---
주,야 자동 빛감지 센서로 캔 절약 | 빛 감지 센서로 캔 절약
24시간 타이머 설정 후 분사 | 24시간 타이머 설정 후 분사
야간(Off) 주간(On) 기능 | 야간(Off) 주간(On) 기능
타이머 7.5/15/30분 간격 설정 | 타이머 원하는 시간 설정 가능
X | 스마트폰으로 원격조종 가능
X | 즉석분사 기능 추가
X | 남아있는 캔 양 확인 가능, 캔의 양이 부족할 시 메세지로 휴대폰에 알림
    
    시중에 판매중인 자동분사기 제품과 비교해보면서 좀 더 다양한 기능으로, 사용자가 절약 과 편리함을 동시에 얻을 수 있도록 한다.
 
    현재 시중에 있는 제품들은 빛 감지 센서로 인한 on/off 기능으로 캔 절약을 한다. 그러나 저희가 제안하는 제품은 
    단순 on/off기능이 아니라 사람이 나가면 off는 시키는데 타이머 시간을 ‘일시정지’하는 기능으로 추가하여 효율적이도록
    구현하였다.

    또한, 기존 제품들은 주, 야간 기능과 분사 시간을 설정하거나 남아있는 캔의 양이 어느 정도인지 보려면 높이 달려있는 분사기를
    직접 조작해야 되는 사용자의 불편함이 있다. 그리고 일반 가정 집 이나 회사 같은 경우 분사기를 시간 단위로 설정하는 것
    뿐 만이 아닌 필요할 때마다 분사하고 싶을 때가 있을 것이다. 이 부분을 보완하고자 우리가 제안하는 제품은 안드로이드 앱과
    연동하여 분사 시간 타임을 설정할 수 있고 분사하고 싶을 때마다 즉시 분사할 수 있게 한다. 더불어 안드로이드를 통해서 
    남아있는 캔의 양도 체크할 수 있게 한다.

    기존의 자동 분사기의 기능의 좋은 점을 그대로 살린 채로, 사용자가 좀 더 다양한 기능을 편리하게 사용할 방법을 찾아보았다.

#4. 시스템 설계 보고서
##1) 시스템의 목적
	   시중에 판매중인 자동분사기 제품을 좀 더 다양한 기능으로, 사용자가 절약 과 편리함을 동시에 얻을 수 있도록 하기.
	  
##2) 시스템 구조
	   라즈베리파이가 탑재된 방향제에서 수위 센서(초음파센서)로 측정한 남은 캔 양을 전송하고, 
	   조도센서를 통해 감지된 신호를 라즈베리파이에게 전달한다. (mqtt 기반)

	   조도센서를 통해 빛 감지가 되면 on이 되고 라즈베리파이 내부에서 타이머로 돌아 설정된 타이머 시간이 되면
	   자동분사하게 한다. off가 되면 일시정지도 된다.

 	   안드로이드 앱에서도 On/Off 기능, 타이머로 원하는 특정시간 설정, 즉시 분사의 입력이 되면 서버로 통해 
 	   라즈베리파이에 Publish하여 라즈베리파이에서 데이터를 받는다. 또한 라즈베리파이에서 초음파센서로 받은
 	   수위 데이터를 앱으로 Publish하여 화면에서 볼 수 있게 한다. ( 서로 데이터를 주고 받음. Publish & Subscribe )

##3) 시스템의 기능
	    - 기능 1 조도 측정
	    - 기능 2 수위 측정
	    - 기능 3 자동 분사
	
##4) 시스템의 구성 요소 및 각 구성 요소의 기능, 입출력 데이터
	1. 라즈베리파이
 	센서의 데이터를 mqtt서버로부터 지속적으로 Subscribe하며 이 받은 정보들을 가지고 타이머 시간을 계산하여 
	방향제 분사를 하고, 센서로부터 받은 데이터를 안드로이드 앱에게 Publish 하고 앱에서부터 받은 데이터를
	Subscribe하기도 한다.

 	2. 조도센서
 	사람이 입장할 때 불이 켜질 때 빛을 인식하여 라즈베리파이에게 켜졌다는 신호를 Publish한다.
	   	입력 : Light (빛)
   		출력 : 라즈베리파이 on/off

 	3. 초음파센서(수위)
 	남아있는 캔의 양을 측정하여 데이터를 라즈베리파이에게 Publish한다.
   		입력 : 수위
   		출력 : %

 	4. mqtt 서버
  	mqtt서버를 통해 라즈베리파이 내에서 센서들과 통신을 하고, 라즈베리파이와 안드로이드 앱/웹을 통해 
	통신을 할 수 있다.  

 	5. 안드로이드
 	서버를 통해 라즈베리파이와 연결하여 라즈베리파이로부터의 데이터를 Subscribe하고 앱에서 입력되는 데이터들을
	라즈베리파이로 Publish한다. 서로 입출력 데이터를 주고받는다.
   		입력 : 즉시 분사 버튼 클릭, 원하는 타이머 시간 설정
   		출력 : 방향제 분사, 분사되는 방향제 타이머 시간 설정

 
##5). 각 시스템 기능 별 시스템 구성 요소 간의 동작 흐름
	- 시스템 기능 1을 수행하는 시스템 동작 흐름

 


